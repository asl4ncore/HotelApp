@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>@Localizer["UserList"]</title>
    <link href="lib/bootstrap/dist/css/bootstrap.css" rel="stylesheet" />
    <script src="https://code.jquery.com/jquery-2.2.4.min.js"></script>
</head>
<body>
    <h2>@Localizer["UserList"]</h2>
    <form name="userForm">
        <input type="hidden" name="id" value="0" />
        <div class="form-group">
            <div class="form-group">
                <label for="surname">@Localizer["Surname"]:</label>
                <input class="form-control" name="surname" />
            </div>
            <label for="name">@Localizer["Name"]:</label>
            <input class="form-control" name="name" />
        </div>
        <div class="form-group">
            <label for="patronymic">@Localizer["Patronymic"]:</label>
            <input class="form-control" name="patronymic" />
        </div>
        <div class="form-group">
            <label for="email">@Localizer["Email"]:</label>
            <input class="form-control" name="email" />
        </div>
        <div class="form-group">
            <label for="phoneNumber">@Localizer["PhoneNumber"]:</label>
            <input class="form-control" name="phoneNumber" />
        </div>
        <div class="form-group">
            <label for="iin">@Localizer["IIN"]:</label>
            <input class="form-control" name="iin" />
        </div>
        <div class="panel-body">
            <button type="submit" class="btn btn-sm btn-primary">@Localizer["Save"]</button>
            <a id="reset" class="btn btn-sm btn-primary">@Localizer["Cancel"]</a>
        </div>

    </form>
    <table class="table table-condensed table-striped table-bordered">
        <thead>
            <tr>
                <th>Id</th>
                <th>@Localizer["Surname"]</th>
                <th>@Localizer["Name"]</th>
                <th>@Localizer["Patronymic"]</th>
                <th>@Localizer["Email"]</th>
                <th>@Localizer["PhoneNumber"]</th>
                <th>@Localizer["IIN"]</th>
                <th></th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
    <script>
        // Получение всех пользователей
        function GetUsers() {
            $.ajax({
                url: '/api/client',
                type: 'GET',
                contentType: "application/json",
                success: function (clients) {
                    var rows = "";
                    $.each(clients, function (index, client) {
                        // добавляем полученные элементы в таблицу
                        rows += row(client);
                    })
                    $("table tbody").append(rows);
                }
            });
        }
        // Получение одного пользователя
        function GetUser(id) {
            $.ajax({
                url: '/api/client/' + id,
                type: 'GET',
                contentType: "application/json",
                success: function (client) {
                    var form = document.forms["userForm"];
                    form.elements["id"].value = client.Id;
                    form.elements["iin"].value = client.IIN;
                    form.elements["surname"].value = client.Surname;
                    form.elements["name"].value = client.Name;
                    form.elements["patronymic"].value = client.Patronymic;
                    form.elements["email"].value = client.Email;
                    form.elements["phoneNumber"].value = client.PhoneNumber;
                    
                }
            });
        }

        // Добавление пользователя
        function CreateUser(clientIIN, clientSurname, clientName,
            clientPatronymic,clientPhoneNumber, clientEmail  ) {
            $.ajax({
                url: "api/client",
                contentType: "application/json",
                method: "POST",
                data: JSON.stringify({
                    iin: clientIIN,
                    surname: clientSurname,
                    name: clientName,
                    patronymic: clientPatronymic,
                    phoneNumber: clientPhoneNumber,
                    email: clientEmail
                    
                    
                }),
                success: function (client) {
                    reset();
                    $("table tbody").append(row(client));
                }
            })
        }
        // Изменение пользователя
        function EditUser(clientId, clientSurname, clientName,  clientIIN,
            clientPatronymic, clientEmail, clientPhoneNumber) {
            $.ajax({
                url: "api/client",
                contentType: "application/json",
                method: "PUT",
                data: JSON.stringify({
                    id: clientId,
                    iin: clientIIN,
                    surname: clientSurname,
                    name: clientName,
                    patronymic: clientPatronymic,
                    phoneNumber: clientPhoneNumber,
                    email: clientEmail
                }),
                success: function (client) {
                    reset();
                    $("tr[data-rowid='" + client.id + "']").replaceWith(row(client));
                }
            })
        }
        // сброс формы
        function reset() {
            var form = document.forms["userForm"];
            form.reset();
            form.elements["id"].value = 0;
        }
        // Удаление пользователя
        function DeleteUser(id) {
            $.ajax({
                url: "api/client/" + id,
                contentType: "application/json",
                method: "DELETE",
                success: function (client) {
                    $("tr[data-rowid='" + client.id + "']").remove();
                }
            })
        }
        // создание строки для таблицы
        var row = function (client) {
            return "<tr data-rowid='" + client.id + "'><td>" + client.id + "</td>" +
                "<td>" + client.surname + "</td> <td>" + client.name + "</td>" +
                "<td>" + client.patronymic + "</td> <td>" + client.email + "</td>" +
                "<td>" + client.phoneNumber + "</td> <td>" + client.iin + "</td>" +
                "<td><a class='editLink' data-id='" + client.id + "'>@Localizer["Edit"]</a> | " +
                "<a class='removeLink' data-id='" + client.id +
                "'>@Localizer["Delete"]</a></td></tr>";
        }
        // сброс значений формы
        $("#reset").click(function (e) {
            e.preventDefault();
            reset();
        })
        // отправка формы
        $("form").submit(function (e) {
            e.preventDefault();
            var id = this.elements["id"].value;
            var surname = this.elements["surname"].value;
            var name = this.elements["name"].value;
            var patronymic = this.elements["patronymic"].value;
            var email = this.elements["email"].value;
            var phoneNumber = this.elements["phoneNumber"].value;
            var iin = this.elements["iin"].value;
            if (id == 0)
                CreateUser(iin, surname, name, patronymic, phoneNumber, email );
            else
                EditUser(id, iin, surname, name, patronymic, phoneNumber, email);
        });
        // нажимаем на ссылку Изменить
        $("body").on("click", ".editLink", function () {
            var id = $(this).data("id");
            GetUser(id);
        })
        // нажимаем на ссылку Удалить
        $("body").on("click", ".removeLink", function () {
            var id = $(this).data("id");
            DeleteUser(id);
        })
        // загрузка пользователей
        GetUsers();

    </script>

</body>
</html>
